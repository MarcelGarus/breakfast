import ../../martinaise/stdlib.mar
import error.mar
import builtins.mar
import bacon.mar
import toast.mar
import egg.mar
import yogurt.mar
import c.mar
import type.mar

| Compiler Stages:
| - Bacon
| - Toast
| - Egg
| - Yogurt
| - C

fun main(): Never {
  eprintln("Welcome to the Plum compiler!")

  var content = read_file("test.plum") or {
    eprintln("Couldn't read file")
    exit(1)
  }
  var content = content.to_string()

  var bacon = content.to_bacon()
  | println("Bacon:\n{bacon}\n")
  
  var toast = bacon.to_toast() or(error) {
    stderr."Oh no! An error occurred:\n\n{error}\n"
    exit(1)
  }
  | println("Toast:\n{toast}\n")

  var egg = toast.to_egg() or(error) {
    stderr."Oh no! An error occurred:\n\n{error}\n"
    exit(1)
  }
  | println("Egg:\n{egg}\n")

  var yogurt = egg.to_yogurt() or(error) {
    stderr."Oh no! An error occurred:\n\n{error}\n"
    exit(1)
  }
  eprintln("Yogurt:\n{yogurt}\n")

  var c = yogurt.to_c()
  write_file("test.c", c.code.bytes())
  eprintln("\nWrote C code to test.c")

  exit(0)
}
